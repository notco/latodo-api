{
  "info": {
    "version": "1.0",
    "title": "LA Todo API",
    "basePath": "/api"
  },
  "host": "localhost:4000",
  "definitions": {
    "Task": {
      "description": "A task of the application",
      "properties": {
        "details": {
          "description": "Task details",
          "type": "string"
        },
        "order": {
          "description": "Task order",
          "type": "number"
        },
        "status": {
          "description": "Task status",
          "type": "string"
        },
        "title": {
          "description": "Task title",
          "type": "string"
        }
      },
      "required": [
        "order",
        "status",
        "details",
        "title"
      ],
      "title": "Task",
      "type": "object"
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "description": "API Token must be provided via `Authorization: Bearer ` header"
    }
  },
  "paths": {
    "/api/tasks": {
      "get": {
        "description": "List of tasks",
        "operationId": "LatodoApiWeb.TaskController.index",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Task"
        ]
      },
      "post": {
        "description": "Create tasks with params",
        "operationId": "create_tasks",
        "parameters": [
          {
            "description": "Title",
            "in": "query",
            "name": "title",
            "required": true,
            "type": "string"
          },
          {
            "description": "Details",
            "in": "query",
            "name": "details",
            "required": true,
            "type": "string"
          },
          {
            "description": "Order",
            "in": "query",
            "name": "order",
            "required": true,
            "type": "number"
          },
          {
            "description": "Status",
            "in": "query",
            "name": "status",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "400": {
            "description": "Client Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create tasks",
        "tags": [
          "Task"
        ]
      }
    },
    "/api/tasks/{id}": {
      "delete": {
        "description": "Remove a task from the system",
        "operationId": "delete_task",
        "parameters": [
          {
            "description": "The id of the task",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete a task",
        "tags": [
          "Task"
        ]
      },
      "patch": {
        "description": "Update an existing task with params",
        "operationId": "update_task",
        "parameters": [
          {
            "description": "Task ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The task details to update",
            "in": "body",
            "name": "task",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "400": {
            "description": "Client Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Updates an existing task",
        "tags": [
          "Task"
        ]
      }
    }
  },
  "swagger": "2.0"
}